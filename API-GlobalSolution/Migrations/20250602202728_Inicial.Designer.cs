// <auto-generated />
using System;
using API_GlobalSolution;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace API_GlobalSolution.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250602202728_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_GlobalSolution.Models.Alerta", b =>
                {
                    b.Property<int>("AlertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ALERTA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertaId"));

                    b.Property<DateTime>("DataAlerta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ALERTA");

                    b.Property<string>("DescricaoAlerta")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DESCRICAO_ALERTA");

                    b.Property<string>("NivelRisco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NIVEL_RISCO");

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SENSOR_ID_SENSOR");

                    b.Property<string>("StatusAlerta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("STATUS_ALERTA");

                    b.Property<int>("TipoDesastreId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TIPO_DESASTRE_ID_DESASTRE");

                    b.HasKey("AlertaId");

                    b.HasIndex("SensorId");

                    b.HasIndex("TipoDesastreId");

                    b.ToTable("ALERTA", t =>
                        {
                            t.HasCheckConstraint("chk_nivel_risco", "nivel_risco IN ('Atenção', 'Alerta', 'Emergência')");

                            t.HasCheckConstraint("chk_status_alerta", "status_alerta IN ('Ativo', 'Resolvido')");
                        });
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Bairro", b =>
                {
                    b.Property<int>("BairroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_BAIRRO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BairroId"));

                    b.Property<string>("NomeBairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_BAIRRO");

                    b.Property<string>("ZonaBairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ZONA_BAIRRO");

                    b.HasKey("BairroId");

                    b.HasIndex("NomeBairro")
                        .IsUnique();

                    b.ToTable("BAIRRO", t =>
                        {
                            t.HasCheckConstraint("chk_zona_bairro", "zona_bairro IN ('Zona Sul', 'Zona Norte', 'Zona Leste', 'Zona Oeste', 'Zona Central')");
                        });
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_COMENTARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComentarioId"));

                    b.Property<DateTime>("DataComentario")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_COMENTARIO");

                    b.Property<int>("PostagemId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("POSTAGEM_ID_POSTAGEM");

                    b.Property<string>("TextoComentario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("TEXTO_COMENTARIO");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USUARIO_ID_USUARIO");

                    b.HasKey("ComentarioId");

                    b.HasIndex("PostagemId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("COMENTARIO");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.ConfirmaPostagem", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int>("PostagemId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_POSTAGEM");

                    b.Property<DateTime>("DataConfirma")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CONFIRMA");

                    b.HasKey("UsuarioId", "PostagemId");

                    b.HasIndex("PostagemId");

                    b.ToTable("CONFIRMA_POSTAGEM");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_ENDERECO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"));

                    b.Property<int>("BairroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BAIRRO_ID_BAIRRO");

                    b.Property<string>("CepEndereco")
                        .HasMaxLength(9)
                        .HasColumnType("NVARCHAR2(9)")
                        .HasColumnName("CEP_ENDERECO");

                    b.Property<string>("ComplementoEndereco")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("COMPLEMENTO_ENDERECO");

                    b.Property<string>("LogradouroEndereco")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("LOGRADOURO_ENDERECO");

                    b.Property<string>("NumeroEndereco")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("NUMERO_ENDERECO");

                    b.HasKey("EnderecoId");

                    b.HasIndex("BairroId");

                    b.ToTable("ENDERECO");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Postagem", b =>
                {
                    b.Property<int>("PostagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_POSTAGEM");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostagemId"));

                    b.Property<DateTime>("DataPostagem")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_POSTAGEM");

                    b.Property<string>("DescricaoPostagem")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DESCRICAO_POSTAGEM");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ENDERECO_ID_ENDERECO");

                    b.Property<string>("StatusPostagem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("STATUS_POSTAGEM");

                    b.Property<int>("TipoDesastreId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TIPO_DESASTRE_ID_DESASTRE");

                    b.Property<string>("TipoPostagem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasDefaultValue("Usuário")
                        .HasColumnName("TIPO_POSTAGEM");

                    b.Property<string>("TituloPostagem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("TITULO_POSTAGEM");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USUARIO_ID_USUARIO");

                    b.HasKey("PostagemId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("TipoDesastreId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("POSTAGEM", t =>
                        {
                            t.HasCheckConstraint("chk_status_postagem", "status_postagem IN ('Ativo', 'Resolvido', 'Descartado')");

                            t.HasCheckConstraint("chk_tipo_postagem", "tipo_postagem IN ('Usuário', 'Governo')");
                        });
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Sensor", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_SENSOR");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SensorId"));

                    b.Property<int?>("BairroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BAIRRO_ID_BAIRRO");

                    b.Property<string>("NomeSensor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_SENSOR");

                    b.Property<string>("TipoSensor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPO_SENSOR");

                    b.HasKey("SensorId");

                    b.HasIndex("BairroId");

                    b.ToTable("SENSOR");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.TipoDesastre", b =>
                {
                    b.Property<int>("TipoDesastreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_DESASTRE");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDesastreId"));

                    b.Property<string>("DescricaoDesastre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DESCRICAO_DESASTRE");

                    b.Property<string>("NomeDesastre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_DESASTRE");

                    b.HasKey("TipoDesastreId");

                    b.ToTable("TIPO_DESASTRE", t =>
                        {
                            t.HasCheckConstraint("chk_nome_desastre", "nome_desastre IN ('Enchente', 'Inundação', 'Deslizamento', 'Queimada', 'Incêndio Florestal', 'Tempestade', 'Vendaval')");
                        });
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("EMAIL_USUARIO");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_USUARIO");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("SENHA_USUARIO");

                    b.Property<string>("TelefoneUsuario")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("TELEFONE_USUARIO");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasDefaultValue("Usuário")
                        .HasColumnName("TIPO_USUARIO");

                    b.HasKey("UsuarioId");

                    b.HasIndex("EmailUsuario")
                        .IsUnique();

                    b.HasIndex("TelefoneUsuario")
                        .IsUnique();

                    b.ToTable("USUARIO", t =>
                        {
                            t.HasCheckConstraint("chk_tipo_usuario", "tipo_usuario IN ('Usuário', 'Funcionário')");
                        });
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Alerta", b =>
                {
                    b.HasOne("API_GlobalSolution.Models.Sensor", "Sensor")
                        .WithMany()
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_GlobalSolution.Models.TipoDesastre", "TipoDesastre")
                        .WithMany()
                        .HasForeignKey("TipoDesastreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");

                    b.Navigation("TipoDesastre");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Comentario", b =>
                {
                    b.HasOne("API_GlobalSolution.Models.Postagem", "Postagem")
                        .WithMany("Comentarios")
                        .HasForeignKey("PostagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_GlobalSolution.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Postagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.ConfirmaPostagem", b =>
                {
                    b.HasOne("API_GlobalSolution.Models.Postagem", "Postagem")
                        .WithMany()
                        .HasForeignKey("PostagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_GlobalSolution.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Postagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Endereco", b =>
                {
                    b.HasOne("API_GlobalSolution.Models.Bairro", "Bairro")
                        .WithMany()
                        .HasForeignKey("BairroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bairro");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Postagem", b =>
                {
                    b.HasOne("API_GlobalSolution.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_GlobalSolution.Models.TipoDesastre", "TipoDesastre")
                        .WithMany()
                        .HasForeignKey("TipoDesastreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_GlobalSolution.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("TipoDesastre");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Sensor", b =>
                {
                    b.HasOne("API_GlobalSolution.Models.Bairro", "Bairro")
                        .WithMany()
                        .HasForeignKey("BairroId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Bairro");
                });

            modelBuilder.Entity("API_GlobalSolution.Models.Postagem", b =>
                {
                    b.Navigation("Comentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
